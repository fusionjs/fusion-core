/** Copyright (c) 2018 Uber Technologies, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @flow
 */

import type {
  aliaser,
  cleanupFn,
  ExtractReturnType,
  FusionPlugin,
  Middleware,
  Token,
} from './types.js';

declare class FusionApp {
  constructor<Element>(element: Element, render: *): FusionApp;
  cleanups: Array<cleanupFn>;
  registered: Map<any, any>;
  plugins: Array<any>;
  renderer: any;
  cleanup(): Promise<void>;
  enhance<TVal>(token: Token<TVal>, enhancer: Function): void;
  register<TDeps, TProvides>(
    Plugin: FusionPlugin<TDeps, TProvides>
  ): aliaser<Token<*>>;
  register<TVal, TDeps>(
    token: Token<TVal>,
    Plugin: FusionPlugin<TDeps, TVal>
  ): aliaser<Token<*>>;
  register<TVal>(token: Token<TVal>, val: TVal): aliaser<Token<*>>;
  middleware<TDeps>(
    deps: TDeps,
    middleware: (Deps: $ObjMap<TDeps, ExtractReturnType>) => Middleware
  ): void;
  middleware(middleware: Middleware): void;
  callback(): (...Array<*>) => Promise<void> | any;
  resolve(): void;
  getService<TVal>(token: Token<TVal>): any;
}

declare export default typeof FusionApp;
